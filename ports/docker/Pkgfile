version="20.10.18"
runc_version="1.1.4"
containerd_version="1.6.8"
_containerd_commit="9cd3357b7fd7218e4aec3eae239db1f68a5a6ec6"
_moby_commit="e42327a6d3c55ceda3bd5475be7aae6036d02db3"
_runc_commit="5fd4c4d144137e991c4acebb2146ab1483a97925"
_cli_commit="b40c2f6b5deeb11ac6c485c940865ee40664f0f0"
_network_commit="0dde5c895075df6e3630e76f750a447cf63f4789"
tini_version="de40ad007797e0dcd8b7126f27bb87401d224240"
libnetwork_version="0dde5c895075df6e3630e76f750a447cf63f4789"
buildx_version="0.9.1"
common_version="0.50.1"
image_version="5.23.0"
podman_version="4.3.0"
skopeo_version="1.10.0"
storage_version="1.43.0"
desc='CLI tool for managing OCI compliant containers'
nostrip=true
deps=["libseccomp", "linux"]
makedeps=["libseccomp", "linux", "git", "go"]
source=[
	{url="https://github.com/opencontainers/runc/releases/download/v$runc_version/runc.tar.xz",name="runc-$runc_version.tar.xz"},
	{url="https://github.com/containerd/containerd/archive/v$containerd_version.tar.gz",name="containerd-$containerd_version.tar.gz"},
	{url="https://github.com/docker/cli/archive/v$version.tar.gz",name="cli-$version.tar.gz"},
	{url="https://github.com/moby/moby/archive/v$version.tar.gz",name="moby-$version.tar.gz"},
	{protocol="git", url="https://github.com/krallin/tini", commit="de40ad007797e0dcd8b7126f27bb87401d224240"},
	{protocol="git", url="https://github.com/moby/libnetwork", commit="0dde5c895075df6e3630e76f750a447cf63f4789"},
	{url="https://github.com/docker/buildx/archive/refs/tags/v$buildx_version.tar.gz",name="buildx-$buildx_version.tar.gz"},
	{url="docker.sysusers"},
	{url="mounts.conf"},
	{name="common-${common_version}.tar.gz",url="https://github.com/containers/common/archive/v${common_version}.tar.gz"},
	{name="image-${image_version}.tar.gz",url="https://github.com/containers/image/archive/v${image_version}.tar.gz"},
	{name="podman-${podman_version}.tar.gz",url="https://github.com/containers/podman/archive/v${podman_version}.tar.gz"},
	{name="skopeo-${skopeo_version}.tar.gz",url="https://github.com/containers/skopeo/archive/v${skopeo_version}.tar.gz"},
	{name="storage-${storage_version}.tar.gz",url="https://github.com/containers/storage/archive/v${storage_version}.tar.gz"},
]

build='''
	set -x
	export GOPATH="$PWD"
	export GOCACHE="$PWD/cache"
	export GOMODCACHE="$PWD/modcache"

	cd runc-$runc_version
	make COMMIT=$_runc_commit BUILDTAGS="seccomp"
	install -Dm755 runc "$pkgdir/bin/runc"
	install -Dm644 contrib/completions/bash/runc "$pkgdir/share/bash-completion/completions/runc"
	cd -

	cd containerd-$containerd_version
	sed -i 's,/sbin,/bin,;s,/usr/local,/,' containerd.service
	make VERSION=v$containerd_version REVISION=$_containerd_commit BUILDMODE=pie BUILDTAGS="no_btrfs seecomp"
	make PREFIX=/ DESTDIR="$pkgdir" install
	install -Dm644 containerd.service "$pkgdir"/lib/systemd/system/containerd.service
	cd -

	export GO111MODULE=off
	mkdir -p src/github.com/docker

	ln -srf libnetwork src/github.com/docker/libnetwork
	cd libnetwork
	go build -v -ldflags="-linkmode=external" -o proxy github.com/docker/libnetwork/cmd/proxy
	install -Dm755 proxy "$pkgdir/bin/docker-proxy"
	cd -

	ln -srf moby-$version src/github.com/docker/docker
	cd moby-$version
	DOCKER_GITCOMMIT=$_moby_commit DOCKER_BUILDTAGS="exclude_graphdriver_btrfs journald seccomp" VERSION=$version hack/make.sh dynbinary
	install -Dm755 bundles/dynbinary-daemon/dockerd "$pkgdir"/bin/dockerd
	install -Dm644 'contrib/init/systemd/docker.service' "$pkgdir/lib/systemd/system/docker.service"
	install -Dm644 'contrib/init/systemd/docker.socket' "$pkgdir/lib/systemd/system/docker.socket"
	install -Dm644 'contrib/udev/80-docker.rules' "$pkgdir/lib/udev/rules.d/80-docker.rules"
	install -Dm644 "$srcdir/docker.sysusers" "$pkgdir/lib/sysusers.d/docker.conf"
	cd -

	ln -srf cli-$version src/github.com/docker/cli
	cd cli-$version
	GITCOMMIT=$_cli_commit DISABLE_WARN_OUTSIDE_CONTAINER=1 make VERSION=$version dynbinary
	install -Dm755 build/docker "$pkgdir/bin/docker"
	install -Dm644 'contrib/completion/bash/docker' "$pkgdir/share/bash-completion/completions/docker"
	install -Dm644 'contrib/completion/zsh/_docker' "$pkgdir/share/zsh/site-functions/_docker"
	install -Dm644 'contrib/completion/fish/docker.fish' "$pkgdir/share/fish/vendor_completions.d/docker.fish"
	cd -

	export GO111MODULE=on
	cd tini
	export CFLAGS="$CFLAGS -DPR_SET_CHILD_SUBREAPER=36 -DPR_GET_CHILD_SUBREAPER=37"
	noname-cmake . -DCMAKE_BUILD_TYPE=None
	make tini-static
	install -Dm755 tini-static "$pkgdir/bin/docker-init"
	cd -

	cd buildx-$buildx_version
	go build -o docker-buildx -ldflags "-X main.experimental=1 -linkmode=external" ./cmd/buildx
	install -Dm755 docker-buildx "$pkgdir/lib/docker/cli-plugins/docker-buildx"
	cd -

	install -vdm 755 "${pkgdir}/etc/containers/oci/hooks.d/"
	install -vdm 755 "${pkgdir}/etc/containers/registries.conf.d/"
	install -vdm 755 "${pkgdir}/share/containers/oci/hooks.d/"
	install -vdm 755 "${pkgdir}/var/lib/containers/"

	# configs
	install -vDm 644 mounts.conf -t "${pkgdir}/etc/containers/"

	cd "common-${common_version}"
	install -vDm 644 pkg/config/containers.conf -t "${pkgdir}/etc/containers/"
	install -vDm 644 pkg/config/containers.conf -t "${pkgdir}/share/containers/"
	install -vDm 644 pkg/seccomp/seccomp.json -t "${pkgdir}/etc/containers/"
	install -vDm 644 pkg/seccomp/seccomp.json -t "${pkgdir}/share/containers/"
	#install -vDm 644 docs/*.5 -t "${pkgdir}/share/man/man5/"
	cd -

	cd "image-${image_version}"
	# configs
	install -vDm 644 registries.conf -t "${pkgdir}/etc/containers/"
	# man pages
	#install -vDm 644 docs/*.1 -t "${pkgdir}/share/man/man1/"
	#install -vDm 644 docs/man5/*.5 -t "${pkgdir}/share/man/man5/"
	cd -

	cd "podman-${podman_version}"
	#install -vDm 644 *.5 -t "${pkgdir}/share/man/man5/"
	cd -

	cd "skopeo-${skopeo_version}"
	# configs
	install -vDm 644 default-policy.json "${pkgdir}/etc/containers/policy.json"
	install -vDm 644 default.yaml -t "${pkgdir}/etc/containers/registries.d/"
	cd -

	cd "storage-${storage_version}"
	# configs
	install -vDm 644 storage.conf -t "${pkgdir}/etc/containers/"
	install -vDm 644 storage.conf -t "${pkgdir}/share/containers/"
	# man pages
	#install -vDm 644 docs/*.1 -t "${pkgdir}/share/man/man1/"
	#install -vDm 644 docs/*.5 -t "${pkgdir}/share/man/man5/"
	cd -
'''
