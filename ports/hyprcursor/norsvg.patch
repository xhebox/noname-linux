--- a/libhyprcursor/hyprcursor.cpp	2024-03-12 08:29:33.000000000 +0800
+++ b/libhyprcursor/hyprcursor.cpp	2024-03-12 08:29:33.000000000 +0800
@@ -7,7 +7,6 @@
 #include <zip.h>
 #include <cstring>
 #include <algorithm>
-#include <librsvg/rsvg.h>
 
 #include "Log.hpp"
 
@@ -347,43 +346,6 @@
                 cairo_pattern_destroy(PTN);
                 cairo_destroy(PCAIRO);
             }
-        } else if (shape->shapeType == SHAPE_SVG) {
-            const auto FRAMES = impl->getFramesFor(shape.get(), 0);
-
-            for (auto& f : FRAMES) {
-                auto& newImage           = impl->loadedShapes[shape.get()].images.emplace_back(std::make_unique<SLoadedCursorImage>());
-                newImage->artificial     = true;
-                newImage->side           = info.size;
-                newImage->artificialData = new char[info.size * info.size * 4];
-                newImage->cairoSurface   = cairo_image_surface_create_for_data((unsigned char*)newImage->artificialData, CAIRO_FORMAT_ARGB32, info.size, info.size, info.size * 4);
-                newImage->delay          = f->delay;
-
-                const auto PCAIRO = cairo_create(newImage->cairoSurface);
-
-                cairo_save(PCAIRO);
-                cairo_set_operator(PCAIRO, CAIRO_OPERATOR_CLEAR);
-                cairo_paint(PCAIRO);
-                cairo_restore(PCAIRO);
-
-                GError*     error  = nullptr;
-                RsvgHandle* handle = rsvg_handle_new_from_data((unsigned char*)f->data, f->dataLen, &error);
-
-                if (!handle) {
-                    Debug::log(ERR, "Failed reading svg: {}", error->message);
-                    return false;
-                }
-
-                RsvgRectangle rect = {0, 0, (double)info.size, (double)info.size};
-
-                if (!rsvg_handle_render_document(handle, PCAIRO, &rect, &error)) {
-                    Debug::log(ERR, "Failed rendering svg: {}", error->message);
-                    return false;
-                }
-
-                // done
-                cairo_surface_flush(newImage->cairoSurface);
-                cairo_destroy(PCAIRO);
-            }
         } else {
             Debug::log(ERR, "Invalid shapetype in loadThemeStyle");
             return false;
@@ -674,4 +636,4 @@
     }
 
     return frames;
-}
\ 文件尾没有换行符
+}
--- a/CMakeLists.txt	2024-03-12 08:29:33.000000000 +0800
+++ b/CMakeLists.txt	2024-03-12 08:29:33.000000000 +0800
@@ -20,7 +20,7 @@
 set(CMAKE_CXX_STANDARD 23)
 
 find_package(PkgConfig REQUIRED)
-pkg_check_modules(deps REQUIRED IMPORTED_TARGET hyprlang>=0.4.0 libzip cairo librsvg-2.0)
+pkg_check_modules(deps REQUIRED IMPORTED_TARGET hyprlang>=0.4.0 libzip cairo)
 
 if(CMAKE_BUILD_TYPE MATCHES Debug OR CMAKE_BUILD_TYPE MATCHES DEBUG)
     message(STATUS "Configuring hyprcursor in Debug")
