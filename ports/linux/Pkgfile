version="5.19.11"
_kernelname="noname"
ver='''$(
case $version in
*.*) printf $version;;
*.*.*) printf ${version%.*};;
esac
)'''
desc="Linux system kernel"
source=[
	{url="http://mirrors.ustc.edu.cn/kernel.org/linux/kernel/v5.x/linux-${version}.tar.xz"},
	{url="fix-musl-objtool.patch"},
	{url="amd.patch"},
	{url="linux.preset"},
	{url="config"},
]
makedeps=["linux-api-headers", "bc", "bash", "inetutils", "elfutils", "pahole", "libarchive"]
deps=["kmod" , "linux-firmware", "coreutils"]

ext='''
	cd linux-${version}
	scripts/setlocalversion --save-scmversion
	touch ./localversion.10-pkgrel
	echo "-$_kernelname" > ./localversion.20-pkgname

	patch -Nbp1 -i ../fix-musl-objtool.patch
	patch -Nbp1 -i ../amd.patch

	cp ../config .config

	sed -i 's/# CONFIG_EXPERT is not set/CONFIG_EXPERT=y/g' .config
	sed -i 's/CONFIG_X86_AMD_PSTATE=m/CONFIG_X86_AMD_PSTATE=y/g' .config

	sed -i 's;# CONFIG_MODULE_SIG_SHA1 is not set;CONFIG_MODULE_SIG_SHA1=y;g' .config
	sed -i 's;CONFIG_MODULE_SIG_SHA512=y;# CONFIG_MODULE_SIG_SHA512 is not set;g' .config
	sed -i 's;CONFIG_MODULE_SIG_HASH="sha512";CONFIG_MODULE_SIG_HASH="sha1";g' .config

	sed -i 's/\$(LIBS)/& $(LDFLAGS)/' tools/power/cpupower/bench/Makefile
	sed -i 's/SIGCLD/SIGCHLD/g' tools/usb/usbip/src/usbipd.c
	sed -i 's/cpio/bsdcpio/g' kernel/gen_kheaders.sh

	make olddefconfig
	make -s kernelrelease > ../version
'''

build='''
	unset CC
	unset CXX
	unset CFLAGS
	unset CXXFLAGS
	unset LDFLAGS
	cd linux-${version}

	make headers bzImage modules

	install -Dm644 `make -s image_name` "${pkgdir}/boot/vmlinuz-${_kernelname}"

	kernver=`cat ../version`
	modulesdir="${pkgdir}/lib/modules/${kernver}"
	mkdir -p "${modulesdir}"
	make INSTALL_MOD_PATH="$pkgdir" modules_install

	extramodules="extramodules-$_kernelname"
	extradir="$pkgdir/lib/modules/$extramodules"
	install -Dt "$extradir" -m644 ../version
	ln -srf "$extradir" "$modulesdir/extramodules"
	rm -rf "${modulesdir}/source" "${modulesdir}/build"

	subst="s|%PKGBASE%|$_kernelname|g
	s|%KERNVER%|$kernver|g
	s|%EXTRAMODULES%|$extramodules|g"

	sed "$subst" ../linux.preset | install -Dm644 /dev/stdin "${pkgdir}/etc/mkinitcpio.d/linux-${_kernelname}.preset"

	builddir="$pkgdir/lib/modules/$kernver/build"

	install -Dt "$builddir" -m644 Makefile .config Module.symvers System.map vmlinux
	install -Dt "$builddir/kernel" -m644 kernel/Makefile
	install -Dt "$builddir/arch/x86" -m644 arch/x86/Makefile
	cp -t "$builddir" -a scripts

	install -Dt "$builddir/tools/objtool" tools/objtool/objtool
	mkdir -p "$builddir/fs/xfs"
	mkdir -p "$builddir/mm"
	mkdir -p "$builddir/.tmp_versions"

	cp -t "$builddir" -a include
	cp -t "$builddir/arch/x86" -a arch/x86/include
	install -Dt "$builddir/arch/x86/kernel" -m644 arch/x86/kernel/asm-offsets.s
	install -Dt "$builddir/drivers/md" -m644 drivers/md/*.h
	install -Dt "$builddir/net/mac80211" -m644 net/mac80211/*.h
	install -Dt "$builddir/drivers/media/i2c" -m644 drivers/media/i2c/msp3400-driver.h
	install -Dt "$builddir/drivers/media/usb/dvb-usb" -m644 drivers/media/usb/dvb-usb/*.h
	install -Dt "$builddir/drivers/media/dvb-frontends" -m644 drivers/media/dvb-frontends/*.h
	install -Dt "$builddir/drivers/media/tuners" -m644 drivers/media/tuners/*.h
	find . -name Kconfig -exec install -Dm644 {} "$builddir/{}" \;
	
	for arch in "$builddir"/arch/*/; do
		_arch="${arch%%/}"
		_arch="${_arch##*/}"
		if [ "$_arch"="x86" ]; then
			continue
		fi
		rm -rf "$arch"
	done
	rm -rf "$builddir/Documentation"
	find -L "$builddir" -type l -delete
	find "$builddir" -type f -name '*.o' -delete
	
	mkdir -p "$pkgdir/src"
	ln -srf "$builddir" "$pkgdir/src/$version-$_kernelname"
'''
