version="13.0.0"
wasi_version="14.0"
desc="LLVM compiler and its backend"
deps=["libffi", "libxml2", "libedit", "ncurses", "libunwind", "wasi-sysroot"]
makedeps=["libffi", "libxml2", "libedit", "ncurses", "libunwind", "wasi-sysroot", "flex", "bison", "python3"]
source=[
	{url="https://github.com/WebAssembly/wasi-sdk/releases/download/wasi-sdk-${wasi_version%.*}/libclang_rt.builtins-wasm32-wasi-${wasi_version}.tar.gz"},
	{url="https://github.com/llvm/llvm-project/releases/download/llvmorg-$version/llvm-project-$version.src.tar.xz"},
	{url="clang-libexec.patch"},
	{url="llvm-001-musl.patch"},
	{url="libcxx-0001-musl-hacks.patch"},
]

ext='''
	cd llvm-project-$version.src

	sed -i 's/set(COMPILER_RT_HAS_SANITIZER_COMMON TRUE)/set(COMPILER_RT_HAS_SANITIZER_COMMON FALSE)/' compiler-rt/cmake/config-ix.cmake
	sed -i 's/!defined(_GCC_MAX_ALIGN_T)/& \&\& !defined(__DEFINED_max_align_t)/' libcxx/include/stddef.h

	cd llvm
	for i in $source;do
		case $i in
		llvm*.patch) patch -Nbp1 -i "$srcdir/$i";;
		esac
	done
	cd ..

	cd libcxx
	for i in $source;do
		case $i in
		libcxx*.patch) patch -Nbp1 -i "$srcdir/$i";;
		esac
	done
	cd ..

	cd clang
	for i in $source;do
		case $i in
		clang*.patch) patch -Nbp1 -i "$srcdir/$i";;
		esac
	done
	cd ..
'''

build='''
	cd llvm-project-$version.src

	export CC=clang
	export CXX=clang++

	cmake llvm -Bbuild \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_PREFIX= \
		-DCMAKE_INSTALL_LIBDIR=/lib \
		-DCMAKE_INSTALL_LIBEXECDIR=/lib \
		-DLLVM_BINUTILS_INCDIR=/include \
		-DLLVM_BUILD_DOCS=OFF \
		-DLLVM_BUILD_TESTS=OFF \
		-DLLVM_LINK_LLVM_DYLIB=ON \
		-DLLVM_BUILD_LLVM_DYLIB=ON \
		-DLLVM_INSTALL_BINUTILS_SYMLINKS=OFF \
		-DLLVM_INSTALL_CCTOOLS_SYMLINKS=OFF \
		-DLLVM_INSTALL_UTILS=ON \
		-DLLVM_ENABLE_FFI=YES \
		-DLLVM_ENABLE_RTTI=YES \
		-DLLVM_ENABLE_LIBXML2=YES \
		-DLLVM_ENABLE_TERMINFO=YES \
		-DLLVM_ENABLE_LIBEDIT=YES \
		-DLLVM_ENABLE_ZLIB=YES \
		-DLLVM_APPEND_VC_REV=NO \
		-DLLVM_ENABLE_LLD=YES \
		-DLLVM_ENABLE_PROJECTS="clang;clang-tools-extra;libcxx;libcxxabi;lldb;compiler-rt;lld;polly;openmp;pstl" \
		-DLIBCXXABI_LIBCXX_INCLUDES=$PWD/libcxx/include \
		-DLIBCXX_HAS_MUSL_LIBC=YES \
		-DLLVM_DEFAULT_TARGET_TRIPLE="$TARGET"

	cmake --build build
	DESTDIR="${pkgdir}" cmake --build build --target install

	install -d "$pkgdir"/lib/bfd-plugins
	ln -s ../LLVMgold.so "$pkgdir"/lib/bfd-plugins/LLVMgold.so

	cp -a "$srcdir/lib/wasi" "$pkgdir"/lib/clang/*/lib/
'''
