name = "rust"
nostrip = true
rustup_version = "1.26.0"
version = "1.81.0"
_rust_dist_version = "1.81.0"
makedeps = [
  "libffi",
  "ncurses",
  "libxml2",
  "zlib",
  "llvm",
  "wasi-sysroot",
  "xz",
  "curl",
  "cmake",
  "python3",
  "execinfo",
]
deps = [
  "libffi",
  "ncurses",
  "libxml2",
  "zlib",
  "llvm",
  "wasi-sysroot",
  "curl",
  "xz",
  "execinfo",
]
source = [
  { url = "https://static.rust-lang.org/dist/rust-${_rust_dist_version}-x86_64-unknown-linux-musl.tar.xz" },
  { url = "https://static.rust-lang.org/dist/rustc-${version}-src.tar.gz" },
  #{ url = "https://github.com/rust-lang/rustup.rs/archive/${rustup_version}.tar.gz" },
  { url = "need-ssp_nonshared.patch" },
  { url = "need-rpath.patch" },
  { url = "musl-fix-linux_musl_base.patch" },
  { url = "no-export-ld-library-path.patch" },
  { url = "system-wasm-ld.patch" },
  { url = "bash.patch" },
  { url = "noname.patch" },
  { url = "libexecdir.patch" },
]

ext = '''
	mkdir -p stage0/bin
	mkdir -p stage0/lib

	cd rust-${_rust_dist_version}-$TARGET
	find . -name manifest.in -delete
	cp -a rust-std-*/* ../stage0/
	cp -a rustc/* ../stage0/
	cp -a cargo/* ../stage0/
	cd -

	cd rustc-$version-src
	for i in $source; do
		echo $i
		case $i in
		*.patch) patch -Nbp1 -i ../$i;;
		esac
	done

	cat <<- EOF > config.toml
change-id = 116881

[target.$TARGET]
crt-static = false
llvm-config = "$ROOT/bin/llvm-config"
llvm-libunwind = "system"
[target.wasm32-unknown-unknown]
sanitizers = false
profiler = false
[target.wasm32-wasi]
sanitizers = false
profiler = false
wasi-root = "/lib/wasi"
[build]
tools=["cargo", "clippy", "rustdoc", "rustfmt", "analysis", "rust-analyzer-proc-macro-srv", "src", "rust-demangler"]
host=["$TARGET"]
build="$TARGET"
target=[
	"$TARGET",
	"wasm32-unknown-unknown",
	"wasm32-wasi",
]
docs=false
profiler=true
extended=true
sanitizers=false
vendor=true
locked-deps=true
full-bootstrap=false
local-rebuild=false
cargo="$srcdir/stage0/bin/cargo"
rustc="$srcdir/stage0/bin/rustc"
[install]
prefix="/"
libdir="lib"
mandir="share/man"
[rust]
deny-warnings = false
channel="nightly"
lto="thin"
codegen-units-std=1
codegen-tests=false
backtrace-on-ice=true
remap-debuginfo=false
llvm-libunwind = "system"
[llvm]
link-shared = true
static-libstdcpp = false
use-libcxx = true
[dist]
src-tarball=false
EOF
'''

build = '''
	ln -srf /lib/libgcc_s.so.1 /lib/libgcc_s.so
	unset CFLAGS CXXFLAGS LDFLAGS
	#cd "$srcdir/rustup-$rustup_version"
	#cargo build --release --features no-self-update --bin rustup-init
	#install -Dm755 "target/release/rustup-init" "${pkgdir}/bin/rustup"

	export LD_LIBRARY_PATH="$pkgdir/lib:$srcdir/stage0/lib"
	export PATH="$pkgdir/bin:$srcdir/stage0/bin:$PATH"
	export CARGO_HOME="$srcdir/.cargo"

	cd "$srcdir/rustc-$version-src"
	env >> env
	./x.py build
	DESTDIR="$pkgdir" ./x.py install
	rm -rf "$pkgdir"/lib/rustlib/manifest-*
	rm -rf "$pkgdir/lib/rustlib/install.log"
	rm -rf "$pkgdir/lib/rustlib/rust-installer-version"
	rm -rf /lib/libgcc_s.so
'''
